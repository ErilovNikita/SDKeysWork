import { useBaseStore } from './stores'

let manifest = {
    "NAME" : "üîë KeysWork",
    "DEV_URL" : "",
    "DEV_TOKEN" : "",
    "DEV_MODE" : false,
    "GITHUB_OWNER" : "ErilovNikita",
    "GITHUB_REPO" : "SDKeysWork",
    "VERSION" : '4.2.0'
}

class main {
    static manifest = manifest

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–æ–¥—É–ª—å
     * @param {string} method - –ú–µ—Ç–æ–¥ –æ–±—Ä–∞—â–µ–Ω–∏—è
     * @returns {Array<String>} params - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
     */
    static getRequestUrl(
        method: String,
        params: Array<String>
    ) {
        const baseStore = useBaseStore()
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        if (baseStore.dev.enable) {
            return baseStore.dev.url + `/sd/services/rest/exec?func=modules.keysWork.${method}&params="${params.join('","')}"&accessKey=${baseStore.dev.token}`
        } else {
            return jsApi.getAppRestBaseUrl() + `/exec/?func=modules.keysWork.${method}&params="${params.join('","')}"`
        }
    }

    /**
     * –ú–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–∞ —Ç–µ–º—ã 
     * @param {string} login - –°—Ç—Ä–æ–∫–æ–≤–æ–µ –ª–æ–≥–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    static async getThemeCode(
        login: String,
    ) {
        const response = await fetch(main.getRequestUrl('getThemeByUser', [login]), {
            method: "GET",
            mode: "cors"
        })
        return await response.text()
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∫–ª—é—á–∞ 
     * @param {string} accessKey - –°—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ UUID –∫–ª—é—á–∞
     */
    static async disableKey(
        accessKey: String,
    ) {
        await fetch(main.getRequestUrl('removeAccessKey', [accessKey]), {
            method: "GET",
            mode: "cors"
        })
    }

    /**
     * –ú–µ—Ç–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–ª—é—á–∞ 
     * @param {string} accessKey - –°—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ UUID –∫–ª—é—á–∞
     */
    static async enableKey(
        accessKey: String,
    ) {
        await fetch(main.getRequestUrl('activateAccessKey', [accessKey]), {
            method: "GET",
            mode: "cors"
        })
    }
    
    /**
     * –ú–µ—Ç–æ–¥ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞ 
     * @param {string} login - –°—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ UUID –∫–ª—é—á–∞
     * @param {string} lifespan - –°—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ UUID –∫–ª—é—á–∞
     */
    static async addAccessKey(
        login: String,
        lifespan: String,
    ) {
        const response = await fetch(main.getRequestUrl('addAccessKey', [login, lifespan]), {
            method: "GET",
            mode: "cors"
        })
        let accessKey = await response.text()
        let status = response.status
        return {
            "status" : status,
            "accessKey": accessKey
        }
    }

    /**
     * –ú–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –∫–ª—é—á–µ
     * @param {string} findValue - –°—Ç—Ä–æ–∫–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ UUID –∫–ª—é—á–∞ –∏–ª–∏ –ª–æ–≥–∏–Ω–∞
     */
    static async getData(
        findValue:string,
        pageNumber:Number
    ) {
        const response = await fetch(main.getRequestUrl('find', [findValue, String(pageNumber)]), {
            method: "GET",
            mode: "cors"
        })
        const jsonData = await response.json()
        return jsonData
    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–ª–∏–∑–Ω–æ–π –≤–µ—Ä—Å–∏–∏
     */
    static async getReleaseVersion() {
        const response = await fetch(`https://api.github.com/repos/${main.manifest.GITHUB_OWNER}/${main.manifest.GITHUB_REPO}/releases`, {
            method: "GET",
            mode: "cors"
        });
        const jsonData = await response.json();
        return jsonData[0]?.tag_name
    }
}

export default main;